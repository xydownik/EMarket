version: '3.8'

services:
  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 10s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d new_db", "CMD-SHELL", "pg_isready -U admin -d db_replica2"]
      interval: 10s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: app
    depends_on:
      cassandra:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      sh -c "./wait-for-it.sh cassandra:9042 -- ./wait-for-it.sh postgres:5432 -- python manage.py runserver 0.0.0.0:8000"
    environment:
      - CASSANDRA_HOST=cassandra
      - CASSANDRA_PORT=9042
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=new_db
      - POSTGRES_DB2=db_replica2
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      app:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
